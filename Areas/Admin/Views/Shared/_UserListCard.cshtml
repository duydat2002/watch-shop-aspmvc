@using X.PagedList;
@using X.PagedList.Mvc.Core;

@model IPagedList<UserWithRoleName>

<div class="card-header flex">
  <span class="card-title">Role List</span>
  <button class="button button-gb">Add User</button>
</div>
<div class="card-body">
  <div class="card-body-scroll">
    <table class="table">
      <thead>
        <tr>
          <th>Id</th>
          <th>FirstName</th>
          <th>LastName</th>
          <th>Email</th>
          <th>Gender</th>
          <th>Birthdate</th>
          <th>Status</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        @foreach (var user in Model)
        {
          <tr>
            <td>@user.UserId</td>
            <td>@user.FirstName</td>
            <td>@user.LastName</td>
            <td>@user.Email</td>
            <td>@(user.Gender ? "Man" : "Woman")</td>
            <td>@user.Birthdate</td>
            <td>
              @if (user.Active)
              {
                <span class="badge badge-success">Active</span>
              }
              else
              {
                <span class="badge badge-danger">Unactive</span>
              }
            </td>
            <td>
              <div class="table-actions">
                <a href="" class="action-item view bg-info text-info">
                  <i class="fa-regular fa-eye "></i>
                </a>
                <a href="" class="action-item delete bg-danger text-danger">
                  <i class="fa-solid fa-trash"></i>
                </a>
              </div>
            </td>
          </tr>
        }
      </tbody>
    </table>
  </div>
</div>
<div class="card-footer">
  @Html.PagedListPager(Model, page => Url.Action("Customers",
      new { page }),
      new PagedListRenderOptions
  {
    LiElementClasses = new string[] { "page-item" },
    PageClasses = new string[] { "page-link" },
    MaximumPageNumbersToDisplay = 5,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always
  })
</div>